
*{
    box-sizing: border-box;
    margin:0;
    padding:0;
  }

body {
    
    display: flex; /*flex는 가로 방향으로 배치됨, 자신이 가진 내용물의 width만큼 차지함*/
    flex-direction: column; /*아이템을 열(세로,row)방향으로 배치함, 마치 요소들을 쌓아놓은 것 처럼 보임!! */
    justify-content: center;/* Align the flex items at the center of the container, 컨테이너에 있는 플렉스 아이템을 가운데로 정렬함*/
    align-items: center; /* 교차축을 기준으로 아이템을 정렬함  */
    /*  height: 100vh; 버튼과 로또 공이 있는 영역도 가운데로 정렬함*/

    /* --background image에 대한 것--
    배경 이미지 조절(background-repeat에 대한 명령어
    링크:https://m.blog.naver.com/mathesis_time/221663530512 */

    background-image: url('돈사진1.jpg');
    /*background-repeat: no-repeat;  배경 사진 반복 x*/
    /*background-size : cover; 브라우저 창에 알맞게 배경 사진이 맞춰지는 것*/


  }
  
  .lotto-wrapper { 
  }

  /*
  wrapper이 뭘까? 이름 지을때 둘다 레이아웃을 위한 div지만
  container는 주로 여러 개의 요소를 감싸는 div이고,
  wrapper는 단일 요소의 레이아웃을 위한 div를 말한다. */
  
  
  /* class 복합선택자
  첫 번째 참고 링크: https://www.nextree.co.kr/p8468/
  하위 선택자는  space 이고 ex) body ul : body요소의 "자손(자식의 자식)"이 ul인 것을 선택함
  자식 선택자는 > 이다. ex) body>ul  : body요소의 "자식"이 ul인 것을 선택함
  자식과 자손에 대한 설명 링크: https://lktprogrammer.tistory.com/98  */
  

  .lotto-wrapper > .lotto-ball {

    font-size: 25px; /* 역할: 공 자체의 크기*/

    /*역할: width와 height는 "공의 크기를 지정해줌"*/
    width:3em; /*em단위: 상위 요소 기준*/
    height:3em;

    /* display: flex와 display:inline-flex의 차이점
    display: flex 는 반응형 웹에 맞게 가로로 설정되어있음. "화면이 작아지면 공들이 세로로 변함"
    display: inline-flex 는 반응형 웹이 추가가 안됨. 화면이 작아지면 비율이 맞게 작아짐 
    링크: https://rgy0409.tistory.com/4813  */

    display: flex; /*반응형 웹으로 설정해주기, <왜 세로로 되지?????>, 터무니없이 작게하면 스크롤이 생김 */
    justify-content: center; /*  */
    align-items: center; /* */

    border-radius: 50%;
    position:relative;

  }
  
  .lotto-wrapper > .lotto-ball > .number {
    flex-grow: 1;
    text-align: center; /*공 안의 글자 정렬을 가운데로 함*/
    font-weight: bold; /**/
  }
  
  .lotto-wrapper > .lotto-ball > .shadow {

    background: rgb(0,0,0);
    background: radial-gradient(circle at 0% 0%, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 15%, rgba(57,57,57,1) 50%, rgba(91,91,91,1) 70%, rgba(133,133,133,1) 90%, rgba(187,187,187,1) 100%);
    /*radial-gradient: 원형 그라데이션 효과를 만들 수 있음
    radial-gradient( shape size at position, color1, color2, ..., color3 )

      --현재 코드로 예시 들기--
    at 0% 0% → 중심의 위치를 지정 만약 30% 20%였으면 중심이 왼쪽 상단으로 바뀜
    circle → 원 모양으로 그라데이션을 만듬
    rgba(0,0,0,1) 0% → 색깔 뒤에 0%는 그 색깔이 차지하는 "범위를 지정"해주는 것임.

    설명 링크: https://www.codingfactory.net/10850 */

    width: 100%;/*width:100%*/
    height:20%;
  
    position:absolute;
    /* 관련 설명 링크: https://www.daleseo.com/css-position-absolute/ */
    bottom:0;
    left:30%;
    border-radius: 50%;
  
    z-index: -1;
  }
  
  /* 공의 색상 지정해주는 부분
  관련 링크 꼭 보기! 설명 링크: https://www.codingfactory.net/10850 */

  .lotto-wrapper > .lotto-ball:nth-child(1){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(255,126,126,1) 15%, rgba(255,0,0,1) 50%, rgba(124,0,0,1) 70%, rgba(255,0,0,1) 100%);
  }
  .lotto-wrapper > .lotto-ball:nth-child(2){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(255,191,130,1) 15%, rgba(255,125,0,1) 50%, rgba(121,59,0,1) 70%, rgba(255,125,0,1) 100%);
  }
  .lotto-wrapper > .lotto-ball:nth-child(3){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(253,255,126,1) 15%, rgba(252,255,0,1) 50%, rgba(117,119,0,1) 70%, rgba(252,255,0,1) 100%);
  }
  .lotto-wrapper > .lotto-ball:nth-child(4){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(145,255,128,1) 15%, rgba(34,255,0,1) 50%, rgba(15,115,0,1) 70%, rgba(34,255,0,1) 100%);
  }
  .lotto-wrapper > .lotto-ball:nth-child(5){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(131,232,254,1) 15%, rgba(0,209,255,1) 50%, rgba(0,100,122,1) 70%, rgba(0,209,255,1) 100%);
  }
  .lotto-wrapper > .lotto-ball:nth-child(6){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(127,140,255,1) 15%, rgba(0,26,255,1) 50%, rgba(0,12,121,1) 70%, rgba(0,26,255,1) 100%);
  }
  .lotto-wrapper > .lotto-ball:nth-child(7){
    background: rgb(255,255,255);
    background: radial-gradient(circle at 30% 30%, rgba(255,255,255,1) 0%, rgba(201,134,255,1) 15%, rgba(142,0,255,1) 50%, rgba(65,0,117,1) 70%, rgba(142,0,255,1) 100%);
  }
  
  /* transition 속성: 애니메이션의 속도를 조절하는 방법을 제공함, 속성을 "서서히 변화"시킴 */
  .lotto-wrapper {
    overflow: hidden; /* 내용이 over 한다면 어떻게 보여질지 설정하는 부분, hidden 내용이 넘치면 자름 */
    white-space: nowrap; /* 요소가 공백 문자를 처리하는 법을 지정함. 
    공백을 채우지만 가로 폭의 오른쪽 끝에서 줄 바꿈을 하지않고 박스 벗어나 표시됩니다.
    참고 링크: https://www.tabmode.com/homepage/white-space.html */
  }

  .lotto-wrapper > .lotto-ball {
    transition:left 3s linear; /**/
    /*
    linear: 처음부터 끝까지 같은 속도로 전환
    부가적인 transition 링크: https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions*/
    left:100%;
  }
  
  .lotto-wrapper > .lotto-ball.active {
    left:0%;
  }

  .lotto-wrapper > .lotto-ball > .number {
    transition:transform 3s linear;
  }

  .lotto-wrapper > .lotto-ball.active > .number { 
    transform: rotate(-1440deg);
    /* transform:  rotate: 요소를 회전시킬 수 있다
    1turn == 1번 회전하기 == 360deg
    양수면 시계 방향으로 회전함. 음수니까 반시계 반향으로 회전함

    추가+) rotateX는 오른쪽으로 이동, rotateY는 아래쪽으로 이동함
    +) transform: translate( 50px, 50% )는 오른쪽으로 50px, 아래쪽으로 50% 이동함 */

  }